//Kdekoli v hlavnim tele programu se muze vyskytnout statement nebo definice fce
<program> -> <statement> <program>
<program> -> <def_function> <program>
<program> -> EOF

//term_n je potreba pro volani fce kde muze byt vicekrat za sebou oddelen carkou
<term> -> <value> <term_n>
<term> -> id <term_n>
<term> -> None <term_n>
<term> -> Ɛ
<term_n> -> , <term> 
<term_n> -> Ɛ 

<def_function> -> def id ( <params> ) : EOL <eol> INDENT <statement> <return> <statement> dedent
<params> -> id <param>
<params> -> Ɛ
<param> -> , id <param>
<param> -> Ɛ
<return> -> return <return_value> EOL <eol>
<return> -> Ɛ
<return_value> -> <expression>
<return_value> -> Ɛ 

<eol> -> EOL <eol>
<eol> -> Ɛ

//prikazy ktere se mohou vyskytnout kdekoli v tele programu
<statement> -> <expression> EOL <eol> <statement>
<statement> -> id <idwhat> EOL <eol> <statement>
<statement> -> if <expression> : EOL <eol> INDENT <statement> DEDENT else : EOL <eol> INDENT <statement> DEDENT <statement>
<statement> -> while <expression> : EOL <eol> INDENT <statement> DEDENT <statement>
<statement> -> pass EOL <statement>
<statement> -> EOL <statement>
<statement> -> Ɛ

//id muze byt bud promenna nebo nazev fce
<idwhat> -> = <assign>
<idwhat> -> ( <term_n> )

//do promenne muze byt prirazen vysledek volane fce nebo hodnota vyrazu(prirazeni jine samostatne prom. se vyhodnocuje jako vyraz)
<assign> -> id( <term_n> )
<assign> -> <expression>
<assign> -> <function>
